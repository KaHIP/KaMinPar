[build-system]
requires = ["scikit-build-core>=0.10", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "kaminpar"
version = "3.4.0"
description = "Python Bindings for KaMinPar"
requires-python = ">=3.9"
readme = "README.md"
authors = [{ name = "Daniel Seemaier", email = "daniel.seemaier@kit.edu" }]
maintainers = [
  { name = "Daniel Salwasser", email = "daniel.salwasser@outlook.com" },
]
keywords = ["KaMinPar", "Graph Partitioning"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: C++",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "License :: OSI Approved :: MIT License",
]

[project.urls]
Repository = "https://github.com/KaHIP/KaMinPar.git"
Issues = "https://github.com/KaHIP/KaMinPar/issues"

[dependency-groups]
build = ["cibuildwheel"]
test = ["pytest"]
lint = ["ruff", "mypy"]

[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"

[tool.cibuildwheel]
build-verbosity = 1
environment = { "CMAKE_ARGS" = "-DKAMINPAR_PYTHON_INSTALL_TBB=On" }
test-groups = ["test"]
test-command = """
  mkdir misc
  cp {project}/misc/* misc/
  pytest {package}/tests
"""

[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"]
before-build = "yum install -y hwloc-devel"
environment-pass = ["CMAKE_ARGS", "SKBUILD_CMAKE_DEFINE"]
repair-wheel-command = """
  export LD_LIBRARY_PATH="/tmp/tbb/:$LD_LIBRARY_PATH"
  auditwheel repair -w {dest_dir} {wheel}
"""

[tool.cibuildwheel.macos]
archs = ["arm64"]
repair-wheel-command = """
  export DYLD_LIBRARY_PATH="/tmp/tbb/:$DYLD_LIBRARY_PATH"
  delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}
"""

[tool.ruff]
line-length = 100

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "E",   # pycodestyle
  "F",   # Pyflakes
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "SIM", # flake8-simplify
  "I",   # isort
]

[tool.mypy]
warn_return_any = true
disallow_untyped_defs = true
