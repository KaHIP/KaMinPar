/*******************************************************************************
 * @file:   fm_refiner.cc
 * @author: Daniel Seemaier
 * @date:   11.09.2022
 * @brief:  Distributed FM refiner.
 ******************************************************************************/
#include "dkaminpar/refinement/fm_refiner.h"

#include "dkaminpar/context.h"
#include "dkaminpar/graphutils/bfs_extractor.h"
#include "dkaminpar/graphutils/independent_set.h"

#include "common/timer.h"

namespace kaminpar::dist {
FMRefiner::FMRefiner(const Context& ctx) : _fm_ctx(ctx.refinement.fm) {}

void FMRefiner::initialize(const DistributedGraph&, const PartitionContext& p_ctx) {
    _p_ctx = &p_ctx;
}

void FMRefiner::refine(DistributedPartitionedGraph& p_graph) {
    SCOPED_TIMER("FM");
    _p_graph = &p_graph;

    // Find independent set of border nodes
    const auto seed_nodes = graph::find_independent_border_set(*_p_graph, 0);

    // Run BFS
    graph::BfsExtractor bfs_extractor(_p_graph->graph());
    bfs_extractor.initialize(*_p_graph);
    bfs_extractor.set_max_hops(1);
    bfs_extractor.set_max_radius(2);
    bfs_extractor.extract(seed_nodes);

    // Run FM
}
} // namespace kaminpar::dist
